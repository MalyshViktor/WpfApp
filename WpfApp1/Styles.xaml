<Window x:Class="WpfApp1.Styles"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="Styles" Height="450" Width="800">
    <!-- Ресурсы окна - отдельная секция -->
    <Window.Resources>
        <!-- Стили - наборы установок,
             применяемых ко всем элементам 
             определенного типа (TargetType)
        -->
        <Style x:Name ="Gradient" TargetType="Label">
            <Style.Triggers>
                <Trigger
                    Property="IsMouseOver"
                    Value="True">
                    <Setter
                        Property="FontSize"
                        Value="50"/>
                </Trigger>

                <DataTrigger Binding="{Binding ElementName=check1, Path=IsChecked}"
                             Value="True">
                    <Setter Property="Foreground" Value="Orange"/>
                </DataTrigger>
                
            </Style.Triggers>
            <Style.Setters>
            <!-- Вместо FontSize=30
                 используется Setter -->
            <Setter 
                Property="FontSize"
                Value="30"/>
            <!-- Сеттеров в ресурсе может
                 быть несколько-->
            <Setter 
                Property="Foreground"
                Value="SteelBlue"/>
            <Setter 
                Property="FontFamily"
                Value="Comic Sans MS"/>
            </Style.Setters>
        </Style>
       
        <Style TargetType="{x:Type Button}">
            
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border BorderThickness="2"
                                    BorderBrush="DarkGray" CornerRadius="5"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Name="content"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <LinearGradientBrush
                                              StartPoint="0 0"
                                             EndPoint="1 1">
                                                <GradientStop 
                                                Offset="0.2"
                                                Color="CadetBlue" />
                                                <GradientStop 
                                                 Offset="0.5"
                                                 Color="LightCoral" />
                                                <GradientStop 
                                                 Offset="1"
                                                 Color="Aqua" />
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="Green"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontSize">
                <!-- для сложный значений 
                Value выносится в отдельную
                секцию -->
                <Setter.Value>
                    35
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush
                        StartPoint="0 0"
                        EndPoint="1 1">
                        <GradientStop 
                            Offset="0.2"
                            Color="LimeGreen" />
                        <GradientStop 
                            Offset="0.5"
                            Color="Aquamarine" />
                        <GradientStop 
                            Offset="1"
                            Color="Aqua" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            </Style.Setters>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Click">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Height"
                                    Duration="0:0:0.5"
                                    From="50" To="100"/>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Width"
                                    Duration="0:0:0.5"
                                    From="50" To="196"/>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    Duration="0:0:0.5"
                                    From="0.5" To="1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger.Actions>

                </EventTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Именованные ресурсы -->
        <Style x:Key="CenteredContent">
           
             <Setter 
                Property="Control.VerticalContentAlignment"
                Value="Center" />
            
            <Setter 
                Property="Control.HorizontalContentAlignment"
                Value="Center" />
        </Style>

        <Style x:Key="BigLabel">
            <Setter 
                Property="Control.FontSize"
                Value="30"/>
        </Style>

        <!-- Ресурсы можно наследовать
        (базировать на других ресурсах) -->
        <Style x:Key="BigCentered"
               BasedOn="{StaticResource BigLabel}">
            <Setter 
                Property="Control.VerticalContentAlignment"
                Value="Center" />
            <Setter 
                Property="Control.HorizontalContentAlignment"
                Value="Center" />
        </Style>
        <Style  TargetType ="Label" x:Key="Mixed_Style" BasedOn="{StaticResource BigCentered}">
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush
                        StartPoint="0 0"
                        EndPoint="1 1">
                        <GradientStop 
                            Offset="0.2"
                            Color="BlanchedAlmond" />
                        <GradientStop 
                            Offset="0.5"
                            Color="SandyBrown" />
                        <GradientStop 
                            Offset="1"
                            Color="Khaki" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush
                        StartPoint="0 0"
                        EndPoint="1 1">
                        <GradientStop 
                            Offset="0.2"
                            Color="LimeGreen" />
                        <GradientStop 
                            Offset="0.5"
                            Color="Aquamarine" />
                        <GradientStop 
                            Offset="1"
                            Color="Aqua" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key ="New" TargetType="Label" BasedOn="{StaticResource Mixed_Style}">

            <Setter Property="Foreground">
                <Setter.Value>
                <LinearGradientBrush
                        StartPoint="0 0"
                        EndPoint="1 1">
                    <GradientStop 
                            Offset="0.2"
                            Color="LimeGreen" />
                    <GradientStop 
                            Offset="0.5"
                            Color="Aquamarine" />
                    <GradientStop 
                            Offset="1"
                            Color="Aqua" />
                </LinearGradientBrush>
             </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <!-- Контент окна - содержимое -->
    <UniformGrid 
        x:Name="uniGrid"
        Columns="4" 
        Rows="4"
        >
        <Label>Label 1</Label>
        <Label>Label 2</Label>
        <Label>Label 3</Label>
        <Label>Label 4</Label>

        <Button Click="Button_Click">Button 1</Button>
        <Button Click="Button2_Click">Button 2</Button>
        <Button Click ="Button_Click_1">Button 3</Button>
        <Button>Button 4</Button>

        <!-- Применение индивидуального
        стиля полностью отменяет глобальный -->
        <Label Style="{StaticResource ResourceKey=CenteredContent}">Label 5</Label>
        <Label Style="{StaticResource ResourceKey=BigCentered}">Label 6</Label>
        <Label Style="{StaticResource ResourceKey=Mixed_Style}">Label 7</Label>
        <Label>Label 8</Label>

        <CheckBox x:Name="check1">Отметить</CheckBox>
        
    </UniformGrid>
</Window>
    
    <!--
        Триггеры 
    В общем: триггеры - это переключатели
    В технике - системы с несколькими устойчивыми состояниями
    В программировании: 
     - дейстия, выполняемые при совпадении определенных условий
    trigger event  - обработать событие
    
    в WPF разделяют стилевые триггеры и триггеры данных
    Стилевые - применяют стили при заданных условиях
    Триггеры данных - отслеживают изменения в данных и реагируют на них
        -->
